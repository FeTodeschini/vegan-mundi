pipeline {
    agent any
    stages {
        stage('Install Dependencies') {
            steps {
                script {
                    // Using yarn with cache instead of npm, as "npm run build" was getting stuck
                    // Create a directory to store the Yarn cache
                    def cacheDir = "${env.WORKSPACE}/.yarn-cache"

                    // Restore the cache if it exists
                    if (fileExists(cacheDir)) {
                        sh "cp -r ${cacheDir} ~/.cache/yarn"
                    }

                    // Install dependencies
                    sh '''
                        cd client
                        yarn install --production --cache-folder ~/.cache/yarn
                    '''

                    // Archive the Yarn cache for the next build
                    sh "cp -r ~/.cache/yarn ${cacheDir}"
                }
            }
        }

        stage('Build Test App') {
            environment {
                NODE_ENV = 'test'
            }
            steps {
                script {
                    withCredentials([file(credentialsId: 'env-next-test', variable: 'ENV_NEXT_TEST')]) {
                        sh '''
                            cp "$ENV_NEXT_TEST" client/.env.test
                            cd client
                            # Use the cache during the test build
                            yarn run build:test --cache-folder ~/.cache/yarn | tee build.log
                        '''
                    }
                }
            }
        }

        stage('Deploy to TEST') {
            steps {
                script {
                    withCredentials([file(credentialsId: 'env-next-test', variable: 'ENV_NEXT_TEST')]) {
                        sh '''
                            cd client
                            zip -r next.zip .next
                        '''
                    }
                }
            }
        }
    }
}




pipeline {
    agent any

    // agent {
    //     docker {
    //         image 'node:18.17.1-alpine'
    //         args '-v /home/ubuntu/.npm:/root/.npm' // Cache npm dependencies
    //     }
    // }
    stages {
        stage('Install Dependencies') {
            steps {
                sh '''
                    cd client
                    chmod 777 package.json
                    chmod -R 777 . 
                    yarn install --production
                    '''
            }
        }

        stage('Build Test App') {
            environment {
                NODE_ENV = 'test'
            }
            steps {
                script {
                    withCredentials([file(credentialsId: 'env-next-test', variable: 'ENV_NEXT_TEST')]) {
                        sh '''
                            cp "$ENV_NEXT_TEST" client/.env.test
                            cd client
                            NODE_ENV=test yarn run build:test --debug | tee build.log
                        '''
                    }
                }
            }
        }

        stage('Deploy to TEST') {
            steps {
                script {
                    withCredentials([file(credentialsId: 'env-next-test', variable: 'ENV_NEXT_TEST')]) {
                        sh '''
                            cd client
                            zip -r next.zip .next
                        '''
                    }
                }
            }
        }

    }
}