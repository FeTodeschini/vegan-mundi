pipeline {
    agent any

    // agent {
    //     docker {
    //         image 'node:18.17.1-alpine'
    //         args '-v /home/ubuntu/.npm:/root/.npm' // Cache npm dependencies
    //     }
    // }
    stages {
        stage('Install Dependencies') {
            steps {
                sh '''
                    cd client
                    chmod 777 package.json
                    chmod -R 777 . 
                    npm install --omit=dev
                    '''
            }
        }

        stage('Build Test App') {
            environment {
                NODE_ENV = 'test'
            }
            steps {
                script {
                    withCredentials([file(credentialsId: 'env-next-test', variable: 'ENV_NEXT_TEST')]) {
                        sh '''
                            cp "$ENV_NEXT_TEST" client/.env.test
                            cd client
                            NODE_ENV=test DEBUG=* npm run build:test --debug | tee build.log
                        '''
                    }
                }
            }
        }

        stage('Deploy to TEST') {
            steps {
                script {
                    withCredentials([file(credentialsId: 'env-next-test', variable: 'ENV_NEXT_TEST')]) {
                        //  Zip necessary folders, move to TEST EC2, unzip file and restart the application
                        sh '''
                            cd client
                            zip -r .next.zip .next package.json public .env.test
                            scp -i /home/ubuntu/docker-jenkins/vegan-mundi.pem -o StrictHostKeyChecking=no .next.zip ${EC2_USER}@${EC2_TEST}:${REMOTE_DIR_NEXT}/ && \
                            ssh -i /home/ubuntu/docker-jenkins/vegan-mundi.pem -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_TEST} "
                                unzip -o ${REMOTE_DIR_NEXT}/.next.zip -d ${REMOTE_DIR_NEXT}/ && 
                                rm ${REMOTE_DIR_NEXT}/.next.zip &&
                                cd ${REMOTE_DIR_NEXT} && 
                                . /home/ubuntu/.nvm/nvm.sh &&  # Source nvm to make node and npm available
                                npm install --omit=dev
                            "
                        '''
                    }
                }
            }
        }
    }
}